{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "NextBASIC",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "match": "(DEF FN|DEFPROC|PROC)\\s+([A-Za-z]+)s*\\(",
          "captures": {
            "1": {
              "name": "keyword.control.nextbasic"
            },
            "2": {
              "name": "entity.name.function.method.nextbasic"
            }
          }
        },
        {
          "name": "keyword.control.nextbasic",
          "match": "(?i:\\b(AS|BEEP|BIN|BORDER|BRIGHT|CAT|CIRCLE|CLEAR|CLS|CONTINUE|COPY|DATA|DPOKE|DEF FN|DIM|DRAW|ERASE|FLASH|FORMAT|FOR|GO SUB|GO TO|IF|INK|INPUT|INVERSE|LET|LIST|LLIST|LOAD|LPRINT|MERGE|MOVE|NEW|NEXT|ON|OUT|OVER|PAPER|PAUSE|PLOT|POKE|PRINT|RANDOMIZE|READ|RESTORE|RETURN|RUN|SAVE|VERIFY|AT|LINE|STEP|TAB|THEN|TO|STOP|ELSE|ELSEIF|GOTO|GOSUB|WHILE|UNTIL|BANK|LAYER|PALETTE|SPRITE|TILE|REMOUNT|PWD|CD|MKDIR|RMDIR|DRIVER|PROC|DEFPROC|ENDPROC|LOCAL|OPEN|CLOSE|REPEAT|PLAY|SPECTRUM|PRIVATE|ENDIF|EXIT)\\b)"
        },
        {
          "name": "keyword.operator.logical.nextbasic",
          "match": "(?i:\\b(AND|NOT|OR|MOD)\\b)"
        },
        {
          "name": "entity.name.function.nextbasic",
          "match": "(?i:\\b(ABS|ACS|ASN|ATN|ATTR|CODE|COS|EXP|FN|INT|IN|LEN|LN|DPEEK|PEEK|PI|POINT|REG|RND|SGN|SIN|SQR|TAN|USR|VAL|REF|TIME)\\b)"
        },
        {
          "name": "entity.name.function.nextbasic",
          "match": "(?i:\\b(CHR\\$|INKEY\\$|SCREEN\\$|VAL\\$|STR\\$|PEEK\\$|TIME\\$))"
        },
        {
          "name": "comment.line.remark.nextbasic",
          "match": "(?i:(\\bREM\\b).*)"
        },
        {
          "name": "comment.line.semicolon.nextbasic",
          "match": "(?<=:)(?i:(\\s*;).*)"
        },
        {
          "name": "comment.line.nextbasic",
          "match": "^(\\s*;.*)$"
        },
        {
          "name": "variable.other.nextbasic",
          "match": "%[A-Za-z]\\b"
        },
        {
          "name": "variable.name.nextbasic",
          "match": "\\b[A-Za-z](\\$|[A-Za-z0-9]*)"
        },
        {
          "match": "^([0-9]+)\\s+(;.*)",
          "captures": {
            "1": {
              "name": "entity.name.section.nextbasic"
            },
            "2": {
              "name": "comment.line.nextbasic"
            }
          }
        },
        {
          "name": "entity.name.section.nextbasic",
          "begin": "^([0-9]+)",
          "end": "(?<=\\d)\\s"
        },
        {
          "name": "entity.other.nextbasic",
          "match": "^(#\\s*(?:autostart|autoline|program|bankfile)\\s+(?:.*))$"
        },
        {
          "name": "support.constant.nextbasic",
          "match": "^(#(?:define)\\s+(?:.*))$"
        },
        {
          "name": "comment.line.directive.nextbasic",
          "match": "^(#(?:.*))$"
        },
        {
          "name": "support.constant.nextbasic",
          "match": "(#[a-zA-Z_]*)"
        },
        {
          "name": "constant.numeric.nextbasic",
          "match": "(#[0-9])"
        },
        {
          "name": "constant.numeric.nextbasic",
          "match": "-?\\b((([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)|(\\$[a-zA-Z0-9]+)|(@[0|1]+)\\b"
        },
        {
          "match": "&|\\*|\\-|\\+|=|<>|<|>|\\||\\^|<<|>>",
          "name": "keyword.operator.arithmetic.nextbasic"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.nextbasic",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.numeric",
          "match": "\\\\[A-U]"
        },
        {
          "name": "constant.character.escape.nextbasic",
          "match": "\\\\."
        }
      ]
    }
  },
  "scopeName": "source.nextbasic"
}
